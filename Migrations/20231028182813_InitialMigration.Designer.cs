// <auto-generated />
using System;
using GridOrganizerBackend.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace GridOrganizerBackend.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20231028182813_InitialMigration")]
    partial class InitialMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("GridOrganizerBackend.Models.Grid", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Grids");
                });

            modelBuilder.Entity("GridOrganizerBackend.Models.GridItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("GridId")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("GridId");

                    b.ToTable("GridItems");
                });

            modelBuilder.Entity("GridOrganizerBackend.Models.GridItem", b =>
                {
                    b.HasOne("GridOrganizerBackend.Models.Grid", null)
                        .WithMany("GridItems")
                        .HasForeignKey("GridId");
                });

            modelBuilder.Entity("GridOrganizerBackend.Models.Grid", b =>
                {
                    b.Navigation("GridItems");
                });
#pragma warning restore 612, 618
        }
    }
}
